/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/earth.glb --output src/components/EarthModel.tsx --types --shadows --keepnames 
*/

import React, { useRef } from 'react'; // Add useRef
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber'; // Add useFrame
import * as THREE from 'three'; // Make sure THREE is imported if needed for types
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Earth_Diffuse_6K: THREE.Mesh
    Earth_Diffuse_6K001: THREE.Mesh
  }
  materials: {
    Earth_Diffuse_6K: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const groupRef = useRef<THREE.Group>(null); // Create a ref for the group
  const { nodes, materials } = useGLTF('/models/earth.glb') as GLTFResult;

  // Add the useFrame hook here
  useFrame((state, delta) => {
    if (groupRef.current) {
      // Rotate the group around the Y-axis (upwards axis)
      groupRef.current.rotation.y += delta * 0.1; // delta ensures smooth animation regardless of frame rate
    }
  });

  return (
    // Add the ref to the main <group> element
    <group ref={groupRef} {...props} dispose={null}>
      <mesh name="Earth_Diffuse_6K" castShadow receiveShadow geometry={nodes.Earth_Diffuse_6K.geometry} material={materials.Earth_Diffuse_6K} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={13.301} />
      <mesh name="Earth_Diffuse_6K001" castShadow receiveShadow geometry={nodes.Earth_Diffuse_6K001.geometry} material={materials['Material.001']} rotation={[Math.PI / 2, 0, -1.414]} scale={13.464} />
    </group>
  );
}

useGLTF.preload('/models/earth.glb')
